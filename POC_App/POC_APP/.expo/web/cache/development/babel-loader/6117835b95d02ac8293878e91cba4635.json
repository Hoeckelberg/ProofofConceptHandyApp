{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { FontAwesome } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Colors from \"../constants/Colors\";\nimport useColorScheme from \"../hooks/useColorScheme\";\nimport ArticleScreen from \"../screens/ArticleScreen\";\nimport CustomerScreen from \"../screens/CustomerScreen\";\nimport ModalScreen from \"../screens/ModalScreen\";\nimport NotFoundScreen from \"../screens/NotFoundScreen\";\nimport ShoppingCartScreen from \"../screens/ShoppingCartScreen\";\nimport LinkingConfiguration from \"./LinkingConfiguration\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Navigation(_ref) {\n  var colorScheme = _ref.colorScheme;\n  return _jsx(NavigationContainer, {\n    linking: LinkingConfiguration,\n    theme: colorScheme === 'dark' ? DarkTheme : DefaultTheme,\n    children: _jsx(RootNavigator, {})\n  });\n}\nvar Stack = createNativeStackNavigator();\n\nfunction RootNavigator() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"Root\",\n      component: BottomTabNavigator,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"NotFound\",\n      component: NotFoundScreen,\n      options: {\n        title: 'Oops!'\n      }\n    }), _jsx(Stack.Group, {\n      screenOptions: {\n        presentation: 'modal'\n      },\n      children: _jsx(Stack.Screen, {\n        name: \"Modal\",\n        component: ModalScreen\n      })\n    })]\n  });\n}\n\nvar BottomTab = createBottomTabNavigator();\n\nfunction BottomTabNavigator() {\n  var colorScheme = useColorScheme();\n  return _jsxs(BottomTab.Navigator, {\n    initialRouteName: \"Article\",\n    screenOptions: {\n      tabBarActiveTintColor: Colors[colorScheme].tint\n    },\n    children: [_jsx(BottomTab.Screen, {\n      name: \"Article\",\n      component: ArticleScreen,\n      options: function options(_ref2) {\n        var navigation = _ref2.navigation;\n        return {\n          title: 'Article Screen',\n          headerRight: function headerRight() {\n            return _jsx(Pressable, {\n              onPress: function onPress() {\n                return navigation.navigate('Modal');\n              },\n              style: function style(_ref3) {\n                var pressed = _ref3.pressed;\n                return {\n                  opacity: pressed ? 0.5 : 1\n                };\n              },\n              children: _jsx(FontAwesome, {\n                name: \"info-circle\",\n                size: 25,\n                color: Colors[colorScheme].text,\n                style: {\n                  marginRight: 15\n                }\n              })\n            });\n          }\n        };\n      }\n    }), _jsx(BottomTab.Screen, {\n      name: \"Customer\",\n      component: CustomerScreen,\n      options: {\n        title: 'Customer Screen'\n      }\n    }), _jsx(BottomTab.Screen, {\n      name: \"ShoppingCart\",\n      component: ShoppingCartScreen,\n      options: {\n        title: 'Shopping Cart Screen'\n      }\n    })]\n  });\n}\n\nfunction TabBarIcon(props) {\n  return _jsx(FontAwesome, _objectSpread({\n    size: 30,\n    style: {\n      marginBottom: -3\n    }\n  }, props));\n}","map":{"version":3,"names":["FontAwesome","createBottomTabNavigator","NavigationContainer","DefaultTheme","DarkTheme","createNativeStackNavigator","React","Colors","useColorScheme","ArticleScreen","CustomerScreen","ModalScreen","NotFoundScreen","ShoppingCartScreen","LinkingConfiguration","Navigation","colorScheme","Stack","RootNavigator","BottomTabNavigator","headerShown","title","presentation","BottomTab","tabBarActiveTintColor","tint","navigation","headerRight","navigate","pressed","opacity","text","marginRight","TabBarIcon","props","marginBottom"],"sources":["C:/Users/MarvinHÃ¶ck/Desktop/Lernzeug/ProofofConceptHandyApp/POC_App/POC_APP/navigation/index.tsx"],"sourcesContent":["/**\r\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\r\n * https://reactnavigation.org/docs/getting-started\r\n *\r\n */\r\nimport { FontAwesome } from '@expo/vector-icons';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport * as React from 'react';\r\nimport { ColorSchemeName, Pressable } from 'react-native';\r\n\r\nimport Colors from '../constants/Colors';\r\nimport useColorScheme from '../hooks/useColorScheme';\r\nimport ArticleScreen from '../screens/ArticleScreen';\r\nimport CustomerScreen from '../screens/CustomerScreen';\r\nimport ModalScreen from '../screens/ModalScreen';\r\nimport NotFoundScreen from '../screens/NotFoundScreen';\r\nimport ShoppingCartScreen from '../screens/ShoppingCartScreen';\r\nimport { RootStackParamList, RootTabParamList, RootTabScreenProps } from '../types';\r\nimport LinkingConfiguration from './LinkingConfiguration';\r\n\r\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\r\n  return (\r\n    <NavigationContainer\r\n      linking={LinkingConfiguration}\r\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\r\n      <RootNavigator />\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\n/**\r\n * A root stack navigator is often used for displaying modals on top of all other content.\r\n * https://reactnavigation.org/docs/modal\r\n */\r\nconst Stack = createNativeStackNavigator<RootStackParamList>();\r\n\r\nfunction RootNavigator() {\r\n  return (\r\n    <Stack.Navigator>\r\n      <Stack.Screen name=\"Root\" component={BottomTabNavigator} options={{ headerShown: false }} />\r\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\r\n      <Stack.Group screenOptions={{ presentation: 'modal' }}>\r\n        <Stack.Screen name=\"Modal\" component={ModalScreen} />\r\n      </Stack.Group>\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\n/**\r\n * A bottom tab navigator displays tab buttons on the bottom of the display to switch screens.\r\n * https://reactnavigation.org/docs/bottom-tab-navigator\r\n */\r\nconst BottomTab = createBottomTabNavigator<RootTabParamList>();\r\n\r\nfunction BottomTabNavigator() {\r\n  const colorScheme = useColorScheme();\r\n\r\n  return (\r\n    <BottomTab.Navigator\r\n      initialRouteName=\"Article\"\r\n      screenOptions={{\r\n        tabBarActiveTintColor: Colors[colorScheme].tint,\r\n      }}>\r\n      <BottomTab.Screen\r\n        name=\"Article\"\r\n        component={ArticleScreen}\r\n        options={({ navigation }: RootTabScreenProps<'Article'>) => ({\r\n          title: 'Article Screen',\r\n          headerRight: () => (\r\n            <Pressable\r\n              onPress={() => navigation.navigate('Modal')}\r\n              style={({ pressed }) => ({\r\n                opacity: pressed ? 0.5 : 1,\r\n              })}>\r\n              <FontAwesome\r\n                name=\"info-circle\"\r\n                size={25}\r\n                color={Colors[colorScheme].text}\r\n                style={{ marginRight: 15 }}\r\n              />\r\n            </Pressable>\r\n          ),\r\n        })}\r\n      />\r\n      <BottomTab.Screen\r\n        name=\"Customer\"\r\n        component={CustomerScreen}\r\n        options={{\r\n          title: 'Customer Screen',\r\n        }}\r\n      />\r\n      <BottomTab.Screen\r\n        name=\"ShoppingCart\"\r\n        component={ShoppingCartScreen}\r\n        options={{\r\n          title: 'Shopping Cart Screen',\r\n        }}\r\n      />\r\n    </BottomTab.Navigator>\r\n  );\r\n}\r\n\r\n/**\r\n * You can explore the built-in icon families and icons on the web at https://icons.expo.fyi/\r\n */\r\nfunction TabBarIcon(props: {\r\n  name: React.ComponentProps<typeof FontAwesome>['name'];\r\n  color: string;\r\n}) {\r\n  return <FontAwesome size={30} style={{ marginBottom: -3 }} {...props} />;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}