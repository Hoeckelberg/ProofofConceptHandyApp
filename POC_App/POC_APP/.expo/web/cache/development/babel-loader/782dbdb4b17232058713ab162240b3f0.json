{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport React, { useState, useEffect } from \"react\";\nimport { Text, View } from \"../components/Themed\";\nimport customerProvider from \"../provider/CustomerProvider\";\nimport Modal from \"./CustomerModalScreen\";\nimport { DataTable } from \"react-native-paper\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar windowwidth = Dimensions.get('window').width;\nexport default function CustomerScreen() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showModal = _useState2[0],\n      setShowModal = _useState2[1];\n\n  var _useState3 = useState({\n    id: 0,\n    name: \"\",\n    address: \"\",\n    phoneNumber: 0,\n    owner: \"\"\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedCustomer = _useState4[0],\n      setSelectedCustomer = _useState4[1];\n\n  var toggleModal = function toggleModal() {\n    setShowModal(!showModal);\n    console.log(showModal);\n  };\n\n  var toggleModalWithProps = function toggleModalWithProps(customer) {\n    setSelectedCustomer(customer);\n    setShowModal(!showModal);\n  };\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      customer = _useState6[0],\n      setCustomer = _useState6[1];\n\n  useEffect(function () {\n    customerProvider().then(function (res) {\n      setCustomer(res);\n      console.log(res);\n    });\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [showModal && _jsx(Modal, {\n      toggleModal: toggleModal,\n      showModal: showModal,\n      customer: selectedCustomer,\n      setSelectedCustomer: setSelectedCustomer\n    }), _jsx(Text, {\n      style: styles.title,\n      children: \"Customer Screen\"\n    }), _jsx(Text, {\n      children: \"\\n\"\n    }), _jsxs(View, {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        backgroundColor: \"#252625\"\n      },\n      children: [_jsx(View, {\n        style: {\n          backgroundColor: 'white'\n        },\n        children: _jsxs(DataTable.Header, {\n          children: [_jsx(DataTable.Title, {\n            style: {\n              flex: 0.4\n            },\n            children: \"ID\"\n          }), _jsx(DataTable.Title, {\n            style: {\n              flex: 0.7\n            },\n            children: \"Name\"\n          }), _jsx(DataTable.Title, {\n            style: {\n              flex: 0.5\n            },\n            children: \"Address\"\n          }), _jsx(DataTable.Title, {\n            style: {\n              flex: 0.8\n            },\n            children: \"PhoneNumber\"\n          }), _jsx(DataTable.Title, {\n            style: {\n              flex: -1\n            },\n            children: \"Owner\"\n          })]\n        })\n      }), customer ? customer.map(function (c, key) {\n        return _jsxs(View, {\n          style: {\n            display: \"flex\",\n            backgroundColor: 'white',\n            minWidth: windowwidth\n          },\n          children: [_jsx(DataTable, {\n            children: _jsxs(DataTable.Row, {\n              children: [_jsx(DataTable.Cell, {\n                style: {\n                  flex: 0.4\n                },\n                children: c.id\n              }), _jsx(DataTable.Cell, {\n                style: {\n                  flex: 0.7\n                },\n                children: c.name\n              }), _jsx(DataTable.Cell, {\n                style: {\n                  flex: 0.7\n                },\n                children: c.address\n              }), _jsx(DataTable.Cell, {\n                style: {\n                  flex: 0.7\n                },\n                children: c.phoneNumber\n              }), _jsx(DataTable.Cell, {\n                style: {\n                  flex: -1\n                },\n                children: c.owner\n              })]\n            })\n          }), _jsx(Pressable, {\n            onPress: function onPress() {\n              return toggleModalWithProps(c);\n            },\n            style: {\n              marginRight: \"auto\",\n              marginLeft: \"auto\",\n              backgroundColor: \"red\"\n            },\n            children: _jsx(Text, {\n              style: {\n                color: \"white\",\n                fontSize: 20,\n                width: windowwidth,\n                textAlign: 'center'\n              },\n              children: \"Edit\"\n            })\n          })]\n        }, key);\n      }) : null]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: \"bold\"\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: \"80%\"\n  },\n  View1: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\"\n  },\n  View2: {\n    display: \"flex\"\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","Text","View","customerProvider","Modal","DataTable","windowwidth","Dimensions","get","width","CustomerScreen","showModal","setShowModal","id","name","address","phoneNumber","owner","selectedCustomer","setSelectedCustomer","toggleModal","console","log","toggleModalWithProps","customer","setCustomer","then","res","styles","container","title","display","flexDirection","justifyContent","backgroundColor","flex","map","c","key","minWidth","marginRight","marginLeft","color","fontSize","textAlign","StyleSheet","create","alignItems","fontWeight","separator","marginVertical","height","View1","View2"],"sources":["C:/Users/MarvinHÃ¶ck/Desktop/Lernzeug/ProofofConceptHandyApp/POC_App/POC_APP/screens/CustomerScreen.tsx"],"sourcesContent":["import { Dimensions, Pressable, StyleSheet } from \"react-native\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Text, View } from \"../components/Themed\";\r\nimport ICustomer from \"../Interfaces/ICustomer\";\r\nimport customerProvider from \"../provider/CustomerProvider\";\r\nimport Modal from \"./CustomerModalScreen\";\r\nimport { DataTable } from \"react-native-paper\";\r\n\r\n\r\nconst windowwidth = Dimensions.get('window').width;\r\nexport default function CustomerScreen() {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [selectedCustomer, setSelectedCustomer] = useState<ICustomer>({\r\n    id: 0,\r\n    name: \"\",\r\n    address: \"\",\r\n    phoneNumber: 0,\r\n    owner: \"\",\r\n  });\r\n  const toggleModal = () => {\r\n    setShowModal(!showModal);\r\n    console.log(showModal);\r\n  };\r\n  const toggleModalWithProps = (customer: ICustomer) => {\r\n    setSelectedCustomer(customer);\r\n    setShowModal(!showModal);\r\n  };\r\n  const [customer, setCustomer] = useState<ICustomer[]>([]);\r\n  useEffect(() => {\r\n    customerProvider().then((res) => {\r\n      setCustomer(res);\r\n      console.log(res);\r\n    });\r\n  }, []);\r\n  return (\r\n    <View style={styles.container}>\r\n      {showModal && (\r\n        <Modal\r\n          toggleModal={toggleModal}\r\n          showModal={showModal}\r\n          customer={selectedCustomer}\r\n          setSelectedCustomer={setSelectedCustomer}\r\n        />\r\n      )}\r\n      <Text style={styles.title}>Customer Screen</Text>\r\n      <Text>{\"\\n\"}</Text>\r\n      <View\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n          backgroundColor: \"#252625\",\r\n        }}\r\n      >\r\n        <View style={{backgroundColor: 'white',}}>\r\n          <DataTable.Header>\r\n            <DataTable.Title style={{flex: 0.4}}>ID</DataTable.Title>\r\n            <DataTable.Title style={{flex: 0.7}}>Name</DataTable.Title>\r\n            <DataTable.Title style={{flex: 0.5}}>Address</DataTable.Title>\r\n            <DataTable.Title style={{flex: 0.8}}>PhoneNumber</DataTable.Title>\r\n            <DataTable.Title style={{flex: -1}}>Owner</DataTable.Title>\r\n          </DataTable.Header>\r\n        </View>\r\n\r\n        {customer\r\n          ? customer.map((c, key) => {\r\n              return (\r\n                <View key={key} style={{ display: \"flex\", backgroundColor: 'white', minWidth: windowwidth}}>\r\n                  <DataTable>\r\n                      <DataTable.Row>\r\n                        <DataTable.Cell style={{flex: 0.4}}>{c.id}</DataTable.Cell>\r\n                        <DataTable.Cell style={{flex: 0.7}}>{c.name}</DataTable.Cell>\r\n                        <DataTable.Cell style={{flex: 0.7}}>{c.address}</DataTable.Cell>\r\n                        <DataTable.Cell style={{flex: 0.7}}>{c.phoneNumber}</DataTable.Cell>\r\n                        <DataTable.Cell style={{flex: -1}}>{c.owner}</DataTable.Cell>\r\n                      </DataTable.Row>\r\n                    </DataTable>                    \r\n                  <Pressable\r\n                    onPress={() => toggleModalWithProps(c)}\r\n                    style={{\r\n                      marginRight: \"auto\",\r\n                      marginLeft: \"auto\",\r\n                      backgroundColor: \"red\",\r\n                    }}\r\n                  >\r\n                    <Text style={{ color: \"white\", fontSize: 20, width: windowwidth, textAlign: 'center', }}>Edit</Text>\r\n                  </Pressable>\r\n                </View>\r\n              );\r\n            })\r\n          : null}\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n  },\r\n  separator: {\r\n    marginVertical: 30,\r\n    height: 1,\r\n    width: \"80%\",\r\n  },\r\n  View1: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n  },\r\n  View2: {\r\n    display: \"flex\",\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}