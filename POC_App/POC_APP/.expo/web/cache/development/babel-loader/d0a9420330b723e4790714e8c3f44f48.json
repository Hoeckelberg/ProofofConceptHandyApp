{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar articleProvider = function articleProvider() {\n  var articles, response, data;\n  return _regeneratorRuntime.async(function articleProvider$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          articles = [];\n          _context.prev = 1;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(fetch('http://10.0.2.2:5013/api/article', {\n            mode: 'cors'\n          }));\n\n        case 4:\n          response = _context.sent;\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 7:\n          data = _context.sent;\n          console.log(\"Articles: \", {\n            data: data\n          });\n          articles = data;\n          _context.next = 16;\n          break;\n\n        case 12:\n          _context.prev = 12;\n          _context.t0 = _context[\"catch\"](1);\n          console.log(_context.t0);\n          articles = [{\n            id: 1,\n            name: \"Test1\",\n            price: 2,\n            description: \"string\",\n            available: true,\n            manufacturer: \"string\"\n          }, {\n            id: 1,\n            name: \"Test2\",\n            price: 2,\n            description: \"string\",\n            available: true,\n            manufacturer: \"string\"\n          }];\n\n        case 16:\n          return _context.abrupt(\"return\", articles);\n\n        case 17:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[1, 12]], Promise);\n};\n\nexport default articleProvider;","map":{"version":3,"names":["articleProvider","articles","fetch","mode","response","json","data","console","log","id","name","price","description","available","manufacturer"],"sources":["C:/Users/MarvinHÃ¶ck/Desktop/Lernzeug/ProofofConceptHandyApp/POC_App/POC_APP/provider/ArticleProvider.ts"],"sourcesContent":["import IArticle from '../Interfaces/IArticle';\r\nimport axios from 'axios';\r\n\r\n\r\nconst articleProvider = async ():Promise<IArticle[]> => {\r\n    let articles:IArticle[] = [];\r\n    try {\r\n        // articles = await axios.get('https://127.0.0.1:7013/api/article', {\r\n        //     headers: {\r\n        //         'Content-Type': 'application/json',\r\n        //         'Accept': 'application/json',\r\n        //         'Access-Control-Allow-Origin': '*',\r\n        //     }\r\n        // });\r\n        const response = await fetch('http://10.0.2.2:5013/api/article', {mode: 'cors'});\r\n        const data = await response.json();\r\n        console.log(\"Articles: \",{data});\r\n        articles = data;\r\n        \r\n    } catch (error) {\r\n        console.log(error);\r\n        articles = [{\r\n            id: 1,\r\n            name: \"Test1\",\r\n            price: 2,\r\n            description: \"string\",\r\n            available: true,\r\n            manufacturer: \"string\",\r\n        },{\r\n            id: 1,\r\n            name: \"Test2\",\r\n            price: 2,\r\n            description: \"string\",\r\n            available: true,\r\n            manufacturer: \"string\",\r\n        }];\r\n    }\r\n    return articles;\r\n}\r\nexport default articleProvider;\r\n\r\n"],"mappings":";;AAIA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB;EAAA;EAAA;IAAA;MAAA;QAAA;UAChBC,QADgB,GACM,EADN;UAAA;UAAA;UAAA,iCAUOC,KAAK,CAAC,kCAAD,EAAqC;YAACC,IAAI,EAAE;UAAP,CAArC,CAVZ;;QAAA;UAUVC,QAVU;UAAA;UAAA,iCAWGA,QAAQ,CAACC,IAAT,EAXH;;QAAA;UAWVC,IAXU;UAYhBC,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyB;YAACF,IAAI,EAAJA;UAAD,CAAzB;UACAL,QAAQ,GAAGK,IAAX;UAbgB;UAAA;;QAAA;UAAA;UAAA;UAgBhBC,OAAO,CAACC,GAAR;UACAP,QAAQ,GAAG,CAAC;YACRQ,EAAE,EAAE,CADI;YAERC,IAAI,EAAE,OAFE;YAGRC,KAAK,EAAE,CAHC;YAIRC,WAAW,EAAE,QAJL;YAKRC,SAAS,EAAE,IALH;YAMRC,YAAY,EAAE;UANN,CAAD,EAOT;YACEL,EAAE,EAAE,CADN;YAEEC,IAAI,EAAE,OAFR;YAGEC,KAAK,EAAE,CAHT;YAIEC,WAAW,EAAE,QAJf;YAKEC,SAAS,EAAE,IALb;YAMEC,YAAY,EAAE;UANhB,CAPS,CAAX;;QAjBgB;UAAA,iCAiCbb,QAjCa;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAAxB;;AAmCA,eAAeD,eAAf"},"metadata":{},"sourceType":"module"}