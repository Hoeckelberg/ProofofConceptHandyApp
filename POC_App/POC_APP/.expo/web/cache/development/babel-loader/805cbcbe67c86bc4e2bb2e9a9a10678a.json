{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar customerProvider = function customerProvider() {\n  var customers, response, data;\n  return _regeneratorRuntime.async(function customerProvider$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          customers = [];\n          _context.prev = 1;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(fetch('http://10.0.2.2:5013/api/customer', {\n            mode: 'cors'\n          }));\n\n        case 4:\n          response = _context.sent;\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 7:\n          data = _context.sent;\n          console.log(\"Customers: \", {\n            data: data\n          });\n          customers = data;\n          _context.next = 16;\n          break;\n\n        case 12:\n          _context.prev = 12;\n          _context.t0 = _context[\"catch\"](1);\n          console.log(_context.t0);\n          customers = [{\n            id: 1,\n            name: \"abdada\",\n            address: \"string\",\n            phoneNumber: 2,\n            owner: \"string\"\n          }, {\n            id: 1,\n            name: \"wdaawa\",\n            address: \"string\",\n            phoneNumber: 221,\n            owner: \"string\"\n          }];\n\n        case 16:\n          return _context.abrupt(\"return\", customers);\n\n        case 17:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[1, 12]], Promise);\n};\n\nexport default customerProvider;","map":{"version":3,"names":["customerProvider","customers","fetch","mode","response","json","data","console","log","id","name","address","phoneNumber","owner"],"sources":["C:/Users/MarvinHÃ¶ck/Desktop/Lernzeug/ProofofConceptHandyApp/POC_App/POC_APP/provider/CustomerProvider.ts"],"sourcesContent":["import ICustomer from '../Interfaces/ICustomer';\r\nimport axios from 'axios';\r\n\r\nconst customerProvider = async (): Promise < ICustomer[] > => {\r\n    let customers: ICustomer[] = [];\r\n    try {\r\n        // customers = await axios.get('https://127.0.0.1:7013/api/customer', {\r\n        //     headers: {\r\n        //         'Content-Type': 'application/json',\r\n        //         'Accept': 'application/json',\r\n        //         'Access-Control-Allow-Origin': '*',\r\n        //     }\r\n        // });\r\n        const response = await fetch('http://10.0.2.2:5013/api/customer', {mode: 'cors'});\r\n        const data = await response.json();\r\n        console.log(\"Customers: \",{data});\r\n        customers = data;\r\n    } catch (error) {\r\n        console.log(error);\r\n        customers = [{\r\n            id: 1,\r\n            name: \"abdada\",\r\n            address: \"string\",\r\n            phoneNumber: 2,\r\n            owner: \"string\",\r\n        }, {\r\n            id: 1,\r\n            name: \"wdaawa\",\r\n            address: \"string\",\r\n            phoneNumber: 221,\r\n            owner: \"string\",\r\n        }];\r\n    }\r\n    return customers;\r\n}\r\nexport default customerProvider;"],"mappings":";;AAGA,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB;EAAA;EAAA;IAAA;MAAA;QAAA;UACjBC,SADiB,GACQ,EADR;UAAA;UAAA;UAAA,iCAUMC,KAAK,CAAC,mCAAD,EAAsC;YAACC,IAAI,EAAE;UAAP,CAAtC,CAVX;;QAAA;UAUXC,QAVW;UAAA;UAAA,iCAWEA,QAAQ,CAACC,IAAT,EAXF;;QAAA;UAWXC,IAXW;UAYjBC,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0B;YAACF,IAAI,EAAJA;UAAD,CAA1B;UACAL,SAAS,GAAGK,IAAZ;UAbiB;UAAA;;QAAA;UAAA;UAAA;UAejBC,OAAO,CAACC,GAAR;UACAP,SAAS,GAAG,CAAC;YACTQ,EAAE,EAAE,CADK;YAETC,IAAI,EAAE,QAFG;YAGTC,OAAO,EAAE,QAHA;YAITC,WAAW,EAAE,CAJJ;YAKTC,KAAK,EAAE;UALE,CAAD,EAMT;YACCJ,EAAE,EAAE,CADL;YAECC,IAAI,EAAE,QAFP;YAGCC,OAAO,EAAE,QAHV;YAICC,WAAW,EAAE,GAJd;YAKCC,KAAK,EAAE;UALR,CANS,CAAZ;;QAhBiB;UAAA,iCA8BdZ,SA9Bc;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAAzB;;AAgCA,eAAeD,gBAAf"},"metadata":{},"sourceType":"module"}