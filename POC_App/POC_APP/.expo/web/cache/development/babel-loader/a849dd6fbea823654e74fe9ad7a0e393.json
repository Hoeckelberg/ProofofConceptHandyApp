{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from \"react\";\nimport { View } from \"../components/Themed\";\nimport { MdAccountBox } from \"react-icons/md\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction postShoppingCart(shoppingCart) {\n  fetch(\"https://localhost:7013/api/shoppingcart\", {\n    method: \"POST\",\n    body: JSON.stringify(shoppingCart),\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\"\n    }\n  }).then(function (res) {\n    return res.json();\n  }).then(function (json) {\n    return console.log(json);\n  }).catch(function (err) {\n    return console.log(err);\n  });\n}\n\nexport default function ShoppingCartModalScreen(props) {\n  return _jsx(\"div\", {\n    children: props.showModal && _jsx(View, {\n      style: styles.modal,\n      children: _jsxs(View, {\n        style: styles.mainContainer,\n        children: [_jsx(Text, {\n          style: styles.text,\n          children: \"Modal\"\n        }), _jsxs(View, {\n          style: styles.gridContainer,\n          children: [_jsxs(View, {\n            style: styles.itemContainer,\n            children: [_jsx(MdAccountBox, {\n              color: \"white\",\n              size: 50\n            }), _jsx(Text, {\n              style: {\n                color: 'white'\n              },\n              children: \"AID\"\n            }), _jsx(TextInput, {\n              keyboardType: \"numeric\",\n              onChangeText: function onChangeText(event) {\n                return props.setPostShoppingCart(_objectSpread(_objectSpread({}, props.shoppingCart), {}, {\n                  articleId: parseInt(event)\n                }));\n              },\n              value: props.shoppingCart.articleId.toString(),\n              style: styles.textInput\n            })]\n          }), _jsxs(View, {\n            style: styles.itemContainer,\n            children: [_jsx(MdAccountBox, {\n              color: \"white\",\n              size: 50\n            }), _jsx(Text, {\n              style: {\n                color: 'white'\n              },\n              children: \"CID\"\n            }), _jsx(TextInput, {\n              keyboardType: \"number-pad\",\n              onChangeText: function onChangeText(event) {\n                return props.setPostShoppingCart(_objectSpread(_objectSpread({}, props.shoppingCart), {}, {\n                  customerId: parseInt(event)\n                }));\n              },\n              value: props.shoppingCart.customerId.toString(),\n              style: styles.textInput\n            })]\n          }), _jsxs(View, {\n            style: styles.itemContainer,\n            children: [_jsx(MdAccountBox, {\n              color: \"white\",\n              size: 50\n            }), _jsx(Text, {\n              style: {\n                color: 'white'\n              },\n              children: \"QTY\"\n            }), _jsx(TextInput, {\n              keyboardType: \"number-pad\",\n              onChangeText: function onChangeText(event) {\n                props.setPostShoppingCart(_objectSpread(_objectSpread({}, props.shoppingCart), {}, {\n                  quantity: parseInt(event)\n                }));\n              },\n              value: props.shoppingCart.quantity.toString(),\n              style: styles.textInput\n            })]\n          }), _jsx(Button, {\n            title: \"post\",\n            color: \"black\",\n            onPress: function onPress() {\n              return postShoppingCart(props.shoppingCart);\n            }\n          }), _jsx(Button, {\n            title: \"close\",\n            color: \"black\",\n            onPress: props.toggleModal\n          })]\n        })]\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  modal: {\n    position: \"absolute\",\n    backgroundColor: \"rgba(255,255,255,0.5)\",\n    height: \"100vh\",\n    width: \"100vw\",\n    left: 0,\n    top: 0\n  },\n  itemContainer: {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n    color: \"white\"\n  },\n  gridContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  mainContainer: {\n    backgroundColor: \"black\",\n    zIndex: 9999,\n    position: \"absolute\",\n    top: \"20%\",\n    left: \"43%\",\n    borderRadius: 10,\n    borderColor: \"white\",\n    borderWidth: 4\n  },\n  textInput: {\n    height: \"30px\",\n    padding: \"0 2px\",\n    color: \"#fff\",\n    textAlign: \"center\"\n  },\n  text: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: \"#fff\",\n    textAlign: \"center\"\n  },\n  aaabca: {\n    zIndex: 0,\n    position: \"relative\",\n    backgroundColor: \"rgba(255,0,0,0.2)\",\n    top: \"null\",\n    left: \"null\",\n    height: \"100vh\",\n    width: \"100vw\"\n  }\n});","map":{"version":3,"names":["React","View","MdAccountBox","postShoppingCart","shoppingCart","fetch","method","body","JSON","stringify","headers","then","res","json","console","log","catch","err","ShoppingCartModalScreen","props","showModal","styles","modal","mainContainer","text","gridContainer","itemContainer","color","event","setPostShoppingCart","articleId","parseInt","toString","textInput","customerId","quantity","toggleModal","StyleSheet","create","position","backgroundColor","height","width","left","top","display","flexDirection","justifyContent","alignItems","zIndex","borderRadius","borderColor","borderWidth","padding","textAlign","fontSize","fontWeight","aaabca"],"sources":["C:/Users/MarvinHÃ¶ck/Desktop/Lernzeug/ProofofConceptHandyApp/POC_App/POC_APP/screens/ShoppingCartModalScreen.tsx"],"sourcesContent":["import React, { Component, useState } from \"react\";\r\nimport { View } from \"../components/Themed\";\r\nimport IShoppingCart from \"../Interfaces/IShoppingCart\";\r\nimport {\r\n  MdPriceChange,\r\n  MdArticle,\r\n  MdAccountBox,\r\n  MdAnnouncement,\r\n  MdGite,\r\n} from \"react-icons/md\";\r\nimport { AiFillDatabase, AiFillTag } from \"react-icons/ai\";\r\nimport { BiRename } from \"react-icons/bi\";\r\nimport { StyleSheet, Text, TextInput, Button } from \"react-native\";\r\n\r\ninterface IShoppingCartModalScreenProps {\r\n  showModal: boolean;\r\n  toggleModal: () => void;\r\n  shoppingCart: IShoppingCart;\r\n  setPostShoppingCart: React.Dispatch<React.SetStateAction<IShoppingCart>>;\r\n}\r\n\r\nfunction postShoppingCart(shoppingCart: IShoppingCart) {\r\n  // write an post ShoppingCart function with fetch\r\n  fetch(`https://localhost:7013/api/shoppingcart`, {\r\n    method: \"POST\",\r\n    body: JSON.stringify(shoppingCart),\r\n    headers: {\r\n      \"Content-type\": \"application/json; charset=UTF-8\",\r\n    },\r\n  })\r\n    .then((res) => res.json())\r\n    .then((json) => console.log(json))\r\n    .catch((err) => console.log(err));\r\n}\r\n\r\nexport default function ShoppingCartModalScreen(\r\n  props: IShoppingCartModalScreenProps\r\n) {\r\n  return (\r\n    <div>\r\n      {props.showModal && (\r\n        <View style={styles.modal}>\r\n          <View style={styles.mainContainer}>\r\n            <Text style={styles.text}>Modal</Text>\r\n            <View style={styles.gridContainer}>\r\n              <View style={styles.itemContainer}>\r\n                <MdAccountBox color=\"white\" size={50} />\r\n                <Text style={{color: 'white'}}>AID</Text>\r\n                <TextInput\r\n                  keyboardType=\"numeric\"\r\n                  onChangeText={(event) =>\r\n                    props.setPostShoppingCart({\r\n                      ...props.shoppingCart,\r\n                      articleId: parseInt(event),\r\n                    })\r\n                  }\r\n                  value={props.shoppingCart.articleId.toString()}\r\n                  style={styles.textInput}\r\n                />\r\n              </View>\r\n              <View style={styles.itemContainer}>\r\n                <MdAccountBox color=\"white\" size={50} />\r\n                <Text style={{color: 'white'}}>CID</Text>\r\n                <TextInput\r\n                  keyboardType=\"number-pad\"\r\n                  onChangeText={(event) =>\r\n                    props.setPostShoppingCart({\r\n                      ...props.shoppingCart,\r\n                      customerId: parseInt(event),\r\n                    })\r\n                  }\r\n                  value={props.shoppingCart.customerId.toString()}\r\n                  style={styles.textInput}\r\n                />\r\n              </View>\r\n              <View style={styles.itemContainer}>\r\n                <MdAccountBox color=\"white\" size={50} />\r\n                <Text style={{color: 'white'}}>QTY</Text>\r\n                <TextInput\r\n                  keyboardType=\"number-pad\"\r\n                  onChangeText={(event) => {\r\n                    props.setPostShoppingCart({\r\n                      ...props.shoppingCart,\r\n                      quantity: parseInt(event),\r\n                    });\r\n                  }}\r\n                  value={props.shoppingCart.quantity.toString()}\r\n                  style={styles.textInput}\r\n                />\r\n              </View>\r\n              <Button\r\n                title=\"post\"\r\n                color={\"black\"}\r\n                onPress={() => postShoppingCart(props.shoppingCart)}\r\n              />\r\n              <Button\r\n                title=\"close\"\r\n                color={\"black\"}\r\n                onPress={props.toggleModal}\r\n              />\r\n            </View>\r\n          </View>\r\n        </View>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  modal: {\r\n    position: \"absolute\",\r\n    backgroundColor: \"rgba(255,255,255,0.5)\",\r\n    height: \"100vh\",\r\n    width: \"100vw\",\r\n    left: 0,\r\n    top: 0,\r\n  },\r\n  itemContainer: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-evenly\",\r\n    alignItems: \"center\",\r\n    color: \"white\",\r\n  },\r\n  gridContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  mainContainer: {\r\n    backgroundColor: \"black\",\r\n    zIndex: 9999,\r\n    position: \"absolute\",\r\n    top: \"20%\",\r\n    left: \"43%\",\r\n    borderRadius: 10,\r\n    borderColor: \"white\",\r\n    borderWidth: 4,\r\n  },\r\n  textInput: {\r\n    height: \"30px\",\r\n    padding: \"0 2px\",\r\n    color: \"#fff\",\r\n    textAlign: \"center\",\r\n  },\r\n  text: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    color: \"#fff\",\r\n    textAlign: \"center\",\r\n  },\r\n  aaabca: {\r\n    zIndex: 0,\r\n    position: \"relative\",\r\n    backgroundColor: \"rgba(255,0,0,0.2)\",\r\n    top: \"null\",\r\n    left: \"null\",\r\n    height: \"100vh\",\r\n    width: \"100vw\",\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}